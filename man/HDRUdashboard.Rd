% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HDRU_dashboard.R
\name{HDRUdashboard}
\alias{HDRUdashboard}
\title{Generate a PDF report from the data.}
\usage{
HDRUdashboard(
  admissionData,
  dailyData,
  curPeriod,
  unit = "week",
  minDay = NULL,
  maxDay = NULL,
  file.name
)
}
\arguments{
\item{admissionData}{Data table with the current admission data from the MLW data portal}

\item{dailyData}{Data frame with the current daily data from the MLW data portal}

\item{curPeriod}{Character string vector in yyyy-mm-dd format; giving the Mondays of the weeks to include in the report (if unit=="week"); e.g. dmy("2020"/07/06,"2020/07/13","2020/07/20","2020/07/27") or the start of the months (if unit="month") to include; e.g. dmy("2020/04/01","2020/05/01","2020/06/01","2020/07/01")}

\item{unit}{Character string that is either 'week' or 'month' giving the grouping to use for the bar plots}

\item{minDay}{Character string in yyy-mm-dd format indicating the start of the period to summarise; defaults to NULL (in this case determined from curPeriod); if both minDay and maxDay are not NULL, then they determine the range of records to include in the tables and the plots that are not stratified by week or month}

\item{maxDay}{Character string in yyy-mm-dd format indicating the end of the period to summarise; defaults to NULL (in this case determined from curPeriod); if both minDay and maxDay are not NULL, then they determine the range of records to include in the tables and the plots that are not stratified by week or month}

\item{file.name}{Path to a html file to write the dashboard to}
}
\value{
Html dashboard visualising the provided HDRU data
}
\description{
Generates an HTML report containing summaries of the data, including comparison of lengths of hospital stay by sex and age group, outcome by sex,
comorbidity, symptom and treatment distributions and distribution of vital signs on presentation at hospital.
}
\examples{
# You will need to
#  * Load the admission data from the data portal (argument admissionData).
#  * Load the daily data from the data portal (argument dailyData).
#  * Set the weeks for which you want summaries (argument curWeek).
#  * Specify a file name (with .html extension) that will contain the dashboard report.
# The example below assumes you've got the 2 input data files sitting in your working directory.
# Once you have run the HDRUdashboard() function, open the specified output html file.

library(HDRU)

admissionData<-read.csv("hdru_admission_raw.csv")
dailyData<-read.csv("hdru_daily_raw.csv")
curWeek<-dmy("06/07/2020","13/07/2020","20/07/2020","27/07/2020")

HDRUdashboard(admissionData=admissionData,dailyData=dailyData,curWeek=curWeek,file.name="HDRUdashboard.html")

}
